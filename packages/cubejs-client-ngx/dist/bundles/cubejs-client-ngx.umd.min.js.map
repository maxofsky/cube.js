{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","../../src/client.ts","../../src/module.ts","../../src/query-builder/common.ts","../../src/query-builder/query-members.ts","../../src/query-builder/query.ts","../../src/query-builder/builder-meta.ts","../../src/query-builder/pivot-config.ts","../../src/query-builder/chart-type.ts","../../src/query-builder/query-builder.service.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","pop","length","push","__read","o","m","r","i","ar","error","__spread","arguments","concat","CubejsClient","config","_this","ready$","BehaviorSubject","Observable","subscribe","apiInstace","cubeJsApi","cubejs","token","options","Error","load","query","from","sql","dryRun","meta","watch","params","observer","resultSet","_a","Injectable","Inject","args","CubejsClientModule","forRoot","ngModule","providers","provide","useValue","NgModule","StateSubject","subject","get","getValue","set","BaseMember","field","defineProperty","asCubeQuery","add","name","setPartialQuery","_b","members","replace","replaceWithName","map","currentName","remove","by","filter","index","asArray","resolveMember","TimeDimensionMember","timeDimensions","granularity","updateTimeDimension","updateWith","td","dimension","assign","setDateRange","dateRange","setGranularity","Order","orderMembers","handleQueryChange","bind","handleOrderMembersChange","order","reduce","memo","id","_c","equal","asObject","measures","dimensions","title","of","setMemberOrder","orderMember","reorder","sourceIndex","destinationIndex","moveItemInArray","member","isArray","entries","_d","key","FilterMember","filters","update","operators","filterOperatorsForMember","MemberType","Measures","Dimensions","Segments","TimeDimensions","Filters","Query","_onBeforeChange","newQuery","_super","init","segments","setQuery","partialQuery","setLimit","limit","isPresent","isQueryPresent","BuilderMeta","mapMeta","allDimensions","membersForQuery","type","PivotConfig","pivotConfig","moveItem","sourceAxis","destinationAxis","movePivotItem","setFillMissingDates","fillMissingDates","ChartType","QueryBuilderService","_disableHeuristics","_heuristicChange$","Subject","builderMeta","_resolveBuilderMeta","_resolveQuery","state","chartType","_cubejs","_meta","_query","_handleQueryChange","pipe","switchMap","data","combineLatest","catchError","shouldApplyHeuristicOrder","dryRunResponse","pivotQuery","queryOrder","ResultSet","getNormalizedPivotConfig","a","oldQuery","defaultHeuristics","sessionGranularity","heuristicQuery","Boolean","setCubejsClient","cubejsClient","getOwnPropertyNames","forEach","setPartialState","cubeQuery","deserialize","partialState","disableHeuristics","enableHeuristics"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable, from, BehaviorSubject } from 'rxjs';\nimport cubejs, {\n  CubejsApi,\n  CubeJSApiOptions,\n  DryRunResponse,\n  LoadMethodOptions,\n  Meta,\n  Query,\n  ResultSet,\n  SqlQuery,\n} from '@cubejs-client/core';\n\nexport type CubejsConfig = {\n  token: string;\n  options?: CubeJSApiOptions;\n};\n\n@Injectable()\nexport class CubejsClient {\n  public ready$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  private cubeJsApi: CubejsApi;\n\n  constructor(@Inject('config') private config: any | Observable<any>) {\n    if (this.config instanceof Observable) {\n      this.config.subscribe(() => {\n        this.ready$.next(true);\n      });\n    } else {\n      this.ready$.next(true);\n    }\n  }\n\n  private apiInstace(): CubejsApi {\n    if (!this.cubeJsApi) {\n      if (this.config instanceof Observable) {\n        this.config.subscribe((config) => {\n          this.cubeJsApi = cubejs(config.token, config.options);\n\n          if (!this.cubeJsApi) {\n            throw new Error(\n              'Cannot create CubejsApi instance. Please check that the config is passed correctly and contains all required options.'\n            );\n          }\n        });\n      } else {\n        this.cubeJsApi = cubejs(this.config.token, this.config.options);\n      }\n    }\n\n    return this.cubeJsApi;\n  }\n\n  public load(\n    query: Query | Query[],\n    options?: LoadMethodOptions\n  ): Observable<ResultSet> {\n    return from(<Promise<ResultSet>>this.apiInstace().load(query, options));\n  }\n\n  public sql(\n    query: Query | Query[],\n    options?: LoadMethodOptions\n  ): Observable<SqlQuery> {\n    return from(this.apiInstace().sql(query, options));\n  }\n\n  public dryRun(\n    query: Query | Query[],\n    options?: LoadMethodOptions\n  ): Observable<DryRunResponse> {\n    return from(this.apiInstace().dryRun(query, options));\n  }\n\n  public meta(options?: LoadMethodOptions): Observable<Meta> {\n    return from(this.apiInstace().meta(options));\n  }\n\n  public watch(query, params = {}): Observable<ResultSet> {\n    return new Observable((observer) =>\n      query.subscribe({\n        next: async (query) => {\n          const resultSet = await this.apiInstace().load(query, params);\n          observer.next(resultSet);\n        },\n      })\n    );\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CubejsClient } from './client';\n\n@NgModule({\n  providers: [CubejsClient],\n})\nexport class CubejsClientModule {\n  public static forRoot(config: any): ModuleWithProviders<CubejsClientModule> {\n    return {\n      ngModule: CubejsClientModule,\n      providers: [\n        CubejsClient,\n        {\n          provide: 'config',\n          useValue: config,\n        },\n      ],\n    };\n  }\n}\n","import { BehaviorSubject } from 'rxjs';\n\nexport class StateSubject<T = any> {\n  subject: BehaviorSubject<T>;\n\n  constructor(value: T) {\n    this.subject = new BehaviorSubject(value);\n  }\n\n  get() {\n    return this.subject.getValue();\n  }\n\n  set(value: T) {\n    this.subject.next(value);\n  }\n}\n","import {\n  TimeDimensionGranularity,\n  TQueryOrderObject,\n  TQueryOrderArray,\n  moveItemInArray,\n  Filter,\n  UnaryFilter,\n  BinaryFilter,\n} from '@cubejs-client/core';\nimport { BehaviorSubject } from 'rxjs';\nimport equal from 'fast-deep-equal';\n\nimport { Query } from './query';\n\nexport type TOrder = 'asc' | 'desc' | 'none';\n\nexport type TOrderMember = {\n  id: string;\n  order: TOrder;\n  title: string;\n};\n\nexport class BaseMember {\n  constructor(\n    private query: Query,\n    private field: 'measures' | 'dimensions' | 'segments'\n  ) {}\n\n  private get members() {\n    return this.query.asCubeQuery()[this.field] || [];\n  }\n\n  add(name: string) {\n    this.query.setPartialQuery({\n      [this.field]: [...this.members, name],\n    });\n  }\n\n  replace(name: string, replaceWithName: string) {\n    this.query.setPartialQuery({\n      [this.field]: this.members.map((currentName) =>\n        currentName === name ? replaceWithName : currentName\n      ),\n    });\n  }\n\n  remove(by: string | number) {\n    this.query.setPartialQuery({\n      [this.field]: this.query\n        .asCubeQuery()\n        [this.field].filter((currentName, index) => {\n          if (typeof by === 'string') {\n            return currentName !== by;\n          }\n\n          return index !== by;\n        }),\n    });\n  }\n\n  set(members: string[]) {\n    this.query.setPartialQuery({\n      [this.field]: members,\n    });\n  }\n\n  asArray() {\n    return (this.query.asCubeQuery()[this.field] || []).map((name) =>\n      this.query.meta.resolveMember(name, this.field)\n    );\n  }\n}\n\nexport class TimeDimensionMember {\n  constructor(private query: Query) {}\n\n  private get members() {\n    return this.query.asCubeQuery().timeDimensions || [];\n  }\n\n  get granularity() {\n    return this.members[0]?.granularity;\n  }\n\n  updateTimeDimension(by: string | number, updateWith: any) {\n    const timeDimensions = this.members.map((td, index) => {\n      if (td.dimension === by || index === by) {\n        return {\n          ...td,\n          ...updateWith,\n        };\n      }\n      return td;\n    });\n\n    this.query.setPartialQuery({\n      timeDimensions,\n    });\n  }\n\n  add(name: string) {\n    this.query.setPartialQuery({\n      timeDimensions: [\n        {\n          dimension: name,\n        },\n      ],\n    });\n  }\n\n  remove(name: string) {\n    this.query.setPartialQuery({\n      timeDimensions: this.members.filter(\n        ({ dimension }) => dimension !== name\n      ),\n    });\n  }\n\n  set(timeDimensions: any[]) {\n    this.query.setPartialQuery({\n      timeDimensions,\n    });\n  }\n\n  setDateRange(by: string | number, dateRange: string | string[]) {\n    this.updateTimeDimension(by, { dateRange });\n  }\n\n  setGranularity(by: string | number, granularity: TimeDimensionGranularity) {\n    this.updateTimeDimension(by, { granularity });\n  }\n\n  asArray(): any[] {\n    return (this.query.asCubeQuery().timeDimensions || []).map((td) => {\n      return {\n        ...this.query.meta.resolveMember(td.dimension, 'dimensions'),\n        ...td,\n      };\n    });\n  }\n}\n\nexport class Order {\n  orderMembers = new BehaviorSubject<TOrderMember[]>([]);\n\n  constructor(private query: Query) {\n    this.query.subject.subscribe(this.handleQueryChange.bind(this));\n    this.orderMembers.subscribe(this.handleOrderMembersChange.bind(this));\n  }\n\n  private handleOrderMembersChange(orderMembers: TOrderMember[]) {\n    const order = orderMembers\n      .filter(({ order }) => order !== 'none')\n      .reduce(\n        (memo, { id, order }) => ({ ...memo, [id]: order }),\n        {}\n      ) as TQueryOrderObject;\n\n    if (!equal(order, this.asObject())) {\n      this.query.setPartialQuery({ order });\n    }\n  }\n\n  private handleQueryChange() {\n    this.orderMembers.next(\n      [\n        ...this.query.measures.asArray(),\n        ...this.query.dimensions.asArray(),\n        ...this.query.timeDimensions.asArray(),\n      ].map<TOrderMember>(({ name, title }) => {\n        return {\n          id: name,\n          order: this.of(name),\n          title,\n        };\n      })\n    );\n  }\n\n  setMemberOrder(id: string, order: TOrder) {\n    this.orderMembers.next(\n      this.orderMembers.getValue().map((orderMember) => {\n        if (orderMember.id === id) {\n          return {\n            ...orderMember,\n            order,\n          };\n        }\n        return orderMember;\n      })\n    );\n  }\n\n  reorder(sourceIndex: number, destinationIndex: number) {\n    this.orderMembers.next(\n      moveItemInArray(\n        this.orderMembers.getValue(),\n        sourceIndex,\n        destinationIndex\n      )\n    );\n  }\n\n  of(member: string) {\n    return (this.query.asCubeQuery().order || {})[member] || 'none';\n  }\n\n  set(order: TQueryOrderObject | TQueryOrderArray) {\n    this.query.setPartialQuery({ order });\n  }\n\n  asArray(): TQueryOrderArray {\n    if (Array.isArray(this.query.asCubeQuery().order)) {\n      return this.query.asCubeQuery().order as TQueryOrderArray;\n    }\n\n    return Object.entries(this.query.asCubeQuery().order || {});\n  }\n\n  asObject(): TQueryOrderObject {\n    return this.asArray().reduce(\n      (memo, [key, value]) => ({ ...memo, [key]: value }),\n      {}\n    );\n  }\n}\n\nexport class FilterMember {\n  constructor(private query: Query) {}\n\n  private get filters() {\n    // TODO: update this type assertion once the QueryBuilder supports logical and/or\n    return (this.query.asCubeQuery().filters || []) as (UnaryFilter | BinaryFilter)[];\n  }\n\n  update(by: string | number, updateWith: Partial<Filter>) {\n    const filters = this.filters.map((filter, index) => {\n      if (index === by || filter.member === by || filter.dimension === by) {\n        return {\n          ...filter,\n          ...updateWith,\n        };\n      }\n      return filter;\n    });\n\n    this.query.setPartialQuery({\n      filters: filters as Filter[],\n    });\n  }\n\n  add(filter: Filter) {\n    this.query.setPartialQuery({\n      filters: [...this.filters, filter],\n    });\n  }\n\n  remove(by: string | number) {\n    this.query.setPartialQuery({\n      filters: this.filters.filter((filter, index) => {\n        if (filter.member === by || filter.dimension === by || index === by) {\n          return false;\n        }\n\n        return true;\n      }),\n    });\n  }\n\n  set(filters: Filter[]) {\n    this.query.setPartialQuery({\n      filters,\n    });\n  }\n\n  replace(name: string, replaceWithName: string) {\n    this.query.setPartialQuery({\n      filters: this.filters.map((filter) => {\n        const field = filter.member ? 'member' : 'dimension';\n        return filter.member === name || filter.dimension === name\n          ? {\n              ...filter,\n              [field]: replaceWithName,\n            }\n          : filter;\n      }),\n    });\n  }\n\n  asArray(): any[] {\n    return this.filters.map((filter) => {\n      return {\n        ...this.query.meta.resolveMember(filter.member || filter.dimension, [\n          'dimensions',\n          'measures',\n        ]),\n        operators: this.query.meta.filterOperatorsForMember(\n          filter.member || filter.dimension,\n          ['dimensions', 'measures']\n        ),\n        ...filter,\n      };\n    });\n  }\n}\n","import { isQueryPresent, Meta, Query as TCubeQuery } from '@cubejs-client/core';\n\nimport { StateSubject } from './common';\nimport { BaseMember, FilterMember, Order, TimeDimensionMember } from './query-members';\n\nexport enum MemberType {\n  Measures = 'measures',\n  Dimensions = 'dimensions',\n  Segments = 'segments',\n  TimeDimensions = 'timeDimensions',\n  Filters = 'filters',\n  Order = 'order',\n}\n\nexport type OnChangeCallback = (\n  newQuery: TCubeQuery,\n  oldQuery: TCubeQuery,\n  query: Query\n) => TCubeQuery;\n\nexport class Query extends StateSubject<TCubeQuery> {\n  measures: BaseMember;\n  dimensions: BaseMember;\n  segments: BaseMember;\n  timeDimensions: TimeDimensionMember;\n  filters: FilterMember;\n  order: Order;\n\n  constructor(\n    public meta: Meta,\n    private _onBeforeChange: OnChangeCallback = (newQuery) => newQuery\n  ) {\n    super({});\n    this.init();\n  }\n\n  private init() {\n    this.measures = new BaseMember(this, MemberType.Measures);\n    this.dimensions = new BaseMember(this, MemberType.Dimensions);\n    this.segments = new BaseMember(this, MemberType.Segments);\n    this.timeDimensions = new TimeDimensionMember(this);\n    this.filters = new FilterMember(this);\n    this.order = new Order(this);\n  }\n\n  asCubeQuery(): TCubeQuery {\n    return this.subject.getValue() || {};\n  }\n\n  setQuery(query: TCubeQuery) {\n    this.subject.next(this._onBeforeChange(query, this.subject.getValue(), this));\n  }\n\n  setPartialQuery(partialQuery: Partial<TCubeQuery>) {\n    this.subject.next(\n      this._onBeforeChange(\n        {\n          ...this.subject.getValue(),\n          ...partialQuery,\n        },\n        this.subject.getValue(),\n        this\n      )\n    );\n  }\n\n  setLimit(limit: number) {\n    this.setPartialQuery({ limit });\n  }\n  \n  isPresent(): boolean {\n    return isQueryPresent(this.asCubeQuery());\n  }\n}\n","import {\n  Meta,\n  TCubeDimension,\n  TCubeMeasure,\n  TCubeMember,\n} from '@cubejs-client/core';\n\nexport class BuilderMeta {\n  measures: TCubeMeasure[];\n  dimensions: TCubeDimension[];\n  segments: TCubeMember[];\n  timeDimensions: TCubeDimension[];\n  filters: Array<TCubeMeasure | TCubeDimension>;\n\n  constructor(public readonly meta: Meta) {\n    this.mapMeta();\n  }\n\n  private mapMeta() {\n    const allDimensions = <TCubeDimension[]>(\n      this.meta.membersForQuery(null, 'dimensions')\n    );\n\n    this.measures = <TCubeMeasure[]>this.meta.membersForQuery(null, 'measures');\n    this.segments = this.meta.membersForQuery(null, 'segments');\n    this.dimensions = allDimensions.filter(({ type }) => type !== 'time');\n    this.timeDimensions = allDimensions.filter(({ type }) => type === 'time');\n    this.filters = [...allDimensions, ...this.measures].map((member) => {\n      return {\n        ...member,\n        operators: this.meta.filterOperatorsForMember(member.name, [\n          'dimensions',\n          'measures',\n        ]),\n      };\n    });\n  }\n}\n","import {\n  movePivotItem,\n  PivotConfig as TPivotConfig,\n  TSourceAxis,\n} from '@cubejs-client/core';\nimport { StateSubject } from './common';\n\nexport class PivotConfig extends StateSubject<TPivotConfig> {\n  constructor(pivotConfig: TPivotConfig) {\n    super(pivotConfig);\n  }\n  \n  moveItem(\n    sourceIndex: number,\n    destinationIndex: number,\n    sourceAxis: TSourceAxis,\n    destinationAxis: TSourceAxis\n  ) {\n    this.subject.next(\n      movePivotItem(\n        this.get(),\n        sourceIndex,\n        destinationIndex,\n        sourceAxis,\n        destinationAxis\n      )\n    );\n  }\n  \n  setFillMissingDates(fillMissingDates: boolean) {\n    this.subject.next({\n      ...this.get(),\n      fillMissingDates\n    });\n  }\n}\n","import { StateSubject } from './common';\n\nexport type TChartType = 'line' | 'area' | 'bar' | 'number' | 'table' | 'pie';\n\nexport class ChartType extends StateSubject<TChartType> {\n  constructor(value) {\n    super(value);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Meta,\n  ResultSet,\n  Query as TCubeQuery,\n  PivotConfig as TPivotConfig,\n  isQueryPresent,\n  defaultHeuristics,\n} from '@cubejs-client/core';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\n\nimport { CubejsClient } from '../client';\nimport { Query } from './query';\nimport { BuilderMeta } from './builder-meta';\nimport { PivotConfig } from './pivot-config';\nimport { ChartType, TChartType } from './chart-type';\nimport { StateSubject } from './common';\n\nexport type TQueryBuilderState = {\n  query?: TCubeQuery;\n  pivotConfig?: TPivotConfig;\n  chartType?: TChartType;\n};\n\n@Injectable()\nexport class QueryBuilderService {\n  private _cubejs: CubejsClient;\n  private _meta: Meta;\n  private _query: Query;\n  private _disableHeuristics: boolean = false;\n  private _resolveQuery: (query: Query) => void;\n  private _resolveBuilderMeta: (query: BuilderMeta) => void;\n  private _heuristicChange$ = new Subject<any>();\n\n  readonly builderMeta = new Promise<BuilderMeta>(\n    (resolve) => (this._resolveBuilderMeta = resolve)\n  );\n  readonly query = new Promise<Query>(\n    (resolve) => (this._resolveQuery = resolve)\n  );\n  readonly state = new BehaviorSubject<TQueryBuilderState>({});\n\n  pivotConfig: PivotConfig;\n  chartType: ChartType;\n\n  private async init() {\n    this.pivotConfig = new PivotConfig(null);\n    this.chartType = new ChartType('line');\n\n    this._cubejs.meta().subscribe((meta) => {\n      this._meta = meta;\n\n      this._query = new Query(\n        this._meta,\n        this._handleQueryChange.bind(this)\n      );\n      this._resolveQuery(this._query);\n      this._resolveBuilderMeta(new BuilderMeta(this._meta));\n    });\n\n    this.subscribe();\n\n    if (!this._disableHeuristics) {\n      this._heuristicChange$\n        .pipe(\n          switchMap((data) => {\n            return combineLatest([\n              this._cubejs.dryRun(data.query).pipe(catchError((error) => {\n                // console.error(error);\n                return of(null);\n              })),\n              of(data.shouldApplyHeuristicOrder),\n            ]);\n          })\n        )\n        .subscribe(\n          ([dryRunResponse, shouldApplyHeuristicOrder]) => {\n            if (!dryRunResponse) {\n              return;\n            }\n            \n            const { pivotQuery, queryOrder } = dryRunResponse;\n            \n            this.pivotConfig.set(\n              ResultSet.getNormalizedPivotConfig(\n                pivotQuery,\n                this.pivotConfig.get()\n              )\n            );\n            if (shouldApplyHeuristicOrder) {\n              this._query.order.set(\n                queryOrder.reduce((a, b) => ({ ...a, ...b }), {})\n              );\n            }\n          }\n        );\n    }\n  }\n\n  private _handleQueryChange(newQuery, oldQuery) {\n    const {\n      chartType,\n      shouldApplyHeuristicOrder,\n      query: heuristicQuery,\n    } = defaultHeuristics(newQuery, oldQuery, {\n      meta: this._meta,\n      sessionGranularity: newQuery?.timeDimensions?.[0]?.granularity,\n    });\n\n    const query = this._disableHeuristics\n      ? newQuery\n      : heuristicQuery || newQuery;\n\n    if (isQueryPresent(query) && !this._disableHeuristics) {\n      this._heuristicChange$.next({\n        shouldApplyHeuristicOrder: Boolean(shouldApplyHeuristicOrder),\n        query,\n      });\n    }\n\n    if (!this._disableHeuristics && chartType) {\n      this.chartType.set(chartType);\n    }\n\n    return query;\n  }\n\n  setCubejsClient(cubejsClient: CubejsClient) {\n    this._cubejs = cubejsClient;\n    this.init();\n  }\n\n  private subscribe() {\n    Object.getOwnPropertyNames(this).forEach((key) => {\n      if (this[key] instanceof StateSubject) {\n        this[key].subject.subscribe((value) =>\n          this.setPartialState({\n            [key]: value,\n          })\n        );\n      }\n    });\n    this.query.then((query) => {\n      query.subject.subscribe((cubeQuery) => {\n        this.setPartialState({\n          query: cubeQuery,\n        });\n      });\n    });\n  }\n\n  async deserialize(state) {\n    if (state.query) {\n      (await this.query).setQuery(state.query);\n    }\n\n    Object.entries(state).forEach(([key, value]) => {\n      if (this[key] instanceof StateSubject) {\n        this[key].set(value);\n      }\n    });\n\n    this.subscribe();\n  }\n\n  setPartialState(partialState) {\n    this.state.next({\n      ...this.state.getValue(),\n      ...partialState,\n    });\n  }\n\n  disableHeuristics() {\n    this._disableHeuristics = false;\n  }\n\n  enableHeuristics() {\n    this._disableHeuristics = true;\n  }\n}\n"]}